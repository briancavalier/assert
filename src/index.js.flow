// @flow
declare export function eq<A> (expected: A, actual: A): A
declare export function eq<A> (expected: A): (actual: A) => A

declare export function is<A> (expected: A, actual: A): A
declare export function is<A> (expected: A): (actual: A) => A

declare export function assert (b: boolean): boolean

declare export function throws<E: Error> (f: () => any): E

declare export function rejects<A, E: Error> (p: Promise<A>): Promise<E>

declare export function fail<A> (message: A): void

declare export class AssertionError<A, B> {
  constructor (message: string, expected?: A, actual?: B, fn?: Function): this
}
